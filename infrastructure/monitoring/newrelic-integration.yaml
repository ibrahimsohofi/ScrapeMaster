apiVersion: v1
kind: Secret
metadata:
  name: newrelic-secret
  namespace: monitoring
type: Opaque
stringData:
  license_key: ${NEWRELIC_LICENSE_KEY}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: newrelic-infrastructure-config
  namespace: monitoring
data:
  newrelic-infra.yml: |
    # New Relic Infrastructure configuration
    license_key: ${NEWRELIC_LICENSE_KEY}
    display_name: DataVault-Pro-Cluster

    # Kubernetes integration
    enable_process_metrics: true

    # Custom attributes
    custom_attributes:
      environment: ${ENVIRONMENT}
      service: datavault-pro
      cluster: ${CLUSTER_NAME}

    # Log forwarding
    logs:
      - name: datavault-app-logs
        file: /var/log/containers/*datavault*.log
        attributes:
          service: datavault-pro
          logtype: application

      - name: kubernetes-logs
        file: /var/log/containers/*.log
        attributes:
          logtype: kubernetes
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: newrelic-infra
  namespace: monitoring
  labels:
    app: newrelic-infra
spec:
  selector:
    matchLabels:
      name: newrelic-infra
  template:
    metadata:
      labels:
        name: newrelic-infra
    spec:
      serviceAccountName: newrelic-infra
      hostNetwork: true
      hostPID: true
      hostIPC: true
      containers:
      - name: newrelic-infra
        image: newrelic/infrastructure-k8s:latest
        securityContext:
          privileged: true
        env:
        - name: NRIA_LICENSE_KEY
          valueFrom:
            secretKeyRef:
              name: newrelic-secret
              key: license_key
        - name: NRIA_VERBOSE
          value: "1"
        - name: NRIA_DISPLAY_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: NRK8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: NRIA_CUSTOM_ATTRIBUTES
          value: '{"clusterName":"$(CLUSTER_NAME)"}'
        - name: NRIA_PASSTHROUGH_ENVIRONMENT
          value: "KUBERNETES_SERVICE_HOST,KUBERNETES_SERVICE_PORT,CLUSTER_NAME,CADVISOR_PORT,KUBE_STATE_METRICS_URL,KUBE_STATE_METRICS_POD_LABEL,TIMEOUT,ETCD_TLS_SECRET_NAME,ETCD_TLS_SECRET_NAMESPACE,API_SERVER_SECURE_PORT,KUBE_STATE_METRICS_SCHEME,KUBE_STATE_METRICS_PORT,SCHEDULER_ENDPOINT_URL,ETCD_ENDPOINT_URL,CONTROLLER_MANAGER_ENDPOINT_URL,API_SERVER_ENDPOINT_URL,DISABLE_KUBE_STATE_METRICS,DISCOVERY_CACHE_TTL"
        volumeMounts:
        - name: dev
          mountPath: /dev
        - name: host-docker-socket
          mountPath: /var/run/docker.sock
        - name: log
          mountPath: /var/log
        - name: host-volume
          mountPath: /host
          readOnly: true
        - name: newrelic-config
          mountPath: /etc/newrelic-infra/
      volumes:
      - name: dev
        hostPath:
          path: /dev
      - name: host-docker-socket
        hostPath:
          path: /var/run/docker.sock
      - name: log
        hostPath:
          path: /var/log
      - name: host-volume
        hostPath:
          path: /
      - name: newrelic-config
        configMap:
          name: newrelic-infrastructure-config
      tolerations:
      - operator: "Exists"
        effect: "NoSchedule"
      - operator: "Exists"
        effect: "NoExecute"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: newrelic-infra
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: newrelic-infra
rules:
- apiGroups: [""]
  resources:
    - "nodes"
    - "nodes/metrics"
    - "nodes/stats"
    - "nodes/proxy"
    - "pods"
    - "services"
    - "endpoints"
    - "persistentvolumes"
    - "persistentvolumeclaims"
    - "namespaces"
    - "componentstatuses"
    - "replicationcontrollers"
  verbs: ["get", "list"]
- apiGroups: ["apps"]
  resources:
    - "deployments"
    - "replicasets"
    - "daemonsets"
    - "statefulsets"
  verbs: ["get", "list"]
- apiGroups: ["batch"]
  resources:
    - "jobs"
    - "cronjobs"
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: newrelic-infra
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: newrelic-infra
subjects:
- kind: ServiceAccount
  name: newrelic-infra
  namespace: monitoring
